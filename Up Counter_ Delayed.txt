;**********************************************************************
;                                                                     *
;   This file is a basic code template for assembly code generation   *
;   on the PIC16F84A. This file contains the basic code               *
;   building blocks to build upon.                                    *
;                                                                     *
;   Refer to the MPASM User's Guide for additional information on     *
;   features of the assembler (Document DS33014).                     *
;                                                                     *
;   Refer to the respective PIC data sheet for additional             *
;   information on the instruction set.                               *
;                                                                     *
;**********************************************************************
;                                                                     *
;    Filename:        xxx.asm                                         *
;    Date:                                                            *
;    File Version:                                                    *
;                                                                     *
;    Author:                                                          *
;    Company:                                                         *
;                                                                     *
;                                                                     *
;**********************************************************************
;                                                                     *
;    Files required: P16F84A.INC                                      *
;                                                                     *
;                                                                     *
;                                                                     *
;**********************************************************************
;                                                                     *
;    Notes:                                                           *
;                                                                     *
;                                                                     *
;                                                                     *
;                                                                     *
;**********************************************************************


    list      p=16F84A             ; list directive to define processor
    #include <p16F84a.inc>         ; processor specific variable definitions

    __CONFIG   _CP_OFF & _WDT_OFF & _PWRTE_OFF 

; '__CONFIG' directive is used to embed configuration data within .asm file.
; The lables following the directive are located in the respective .inc file.
; See respective data sheet for additional information on configuration word.

;***** VARIABLE DEFINITIONS
w_temp        EQU     0x0C        ; variable used for context saving 
status_temp   EQU     0x0D        ; variable used for context saving

;**********************************************************************
RESET_VECTOR      CODE    0x0000  ; processor reset vector
        goto    start             ; go to beginning of program

ISR               CODE    0x0004  ; interrupt vector location

Interrupt:

        movwf  w_temp             ; save off current W register contents
        movf   STATUS,w           ; move status register into W register
        movwf  status_temp        ; save off contents of STATUS register

;  Place ISR Here

        movf   status_temp,w      ; retrieve copy of STATUS register
        movwf  STATUS             ; restore pre-isr STATUS register contents
        swapf  w_temp,f
        swapf  w_temp,w           ; restore pre-isr W register contents
        retfie                    ; return from interrupt

MAIN_PROGRAM    CODE

start
	delay_COUNTER1 EQU 0X0C
	delay_COUNTER2 EQU 0X0D
	COUNTER EQU 0X0E
	BSF STATUS,5 
	CLRF TRISB
	MOVLW B'00000001'
	MOVWF TRISA  
	BCF STATUS,5 
	CLRF PORTA
	MOVLW 0X00
	MOVWF COUNTER
	MOVWF PORTB
	BCF PORTA,3
	
       
Loop
	BTFSC PORTA,0
	GOTO Loop

INCREMENT
	CALL DELAY
	INCF COUNTER
	MOVF COUNTER,W
	MOVWF PORTB
	INCFSZ COUNTER
GOTO INCREMENT 

BSF PORTA,3
ENDF 

	
	GOTO ENDF

DELAY
	MOVLW 0XA0
	MOVWF delay_COUNTER1
 LOOP1
	MOVLW 0XA0
	MOVWF delay_COUNTER2
 LOOP2 
	DECFSZ delay_COUNTER2,F
  GOTO LOOP2
	DECFSZ delay_COUNTER1,F
  GOTO LOOP1
RETURN




END 	